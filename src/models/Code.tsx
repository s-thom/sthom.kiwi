/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { useTheme } from 'styled-components';

type GLTFResult = GLTF & {
  nodes: {
    Text: THREE.Mesh;
  };
  materials: {
    ['default']: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const theme = useTheme();
  const group = useRef<THREE.Group>();
  const { nodes /*  */ } = useGLTF('/models/code.glb') as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Text.geometry} rotation={[Math.PI / 2, 0, 0]}>
        <meshStandardMaterial color={theme.colors.background} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/models/code.glb');
